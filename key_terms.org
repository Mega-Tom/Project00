#+TITLE: Project00 Key_Terms
#+LANGUAGE: en
#+OPTIONS: H:4 num:nil toc:nil \n:nil @:t ::t |:t ^:t *:t TeX:t LaTeX:t
#+OPTIONS: html-postamble:nil
#+STARTUP: showeverything entitiespretty

NOTE: Be sure, when you are searching that they are logical defintions, that is
they are definitions that relate to math and Logic.

Example
* Superman Cannot be jumping really high
** identify
Superman is sometimes debated around his flying abilities
Some say that he is merely jumping and due to his speed and 
strength it appears to you and I that he is merely jumping and
moving his body to go up and down after that.
** Define
This is obviously false.  Superman is indeed levitating and not
Jumping
** Example/Explanation
If Superman were jumping when he catches Lois Lane she would be cut in half
due to the speed and trajectory of superman being the man of steel. This is because
he would have to slow/stop to the same speed as Lois to catch her and then "rejump".
He visually does not appear to be 'rejumping' and Lois isnt cut in half.  DONE!
** Non-Trivial Test question
What would be the best way to describe Superman's flight


a. He jumps and with his strength and speed is able to alter his path


b. He flys like a bird and flaps his wings


c. He levitates, he's an alien "HEELLLLLOOOO!"


d. Why do I care about Superman again, he's in the D.C. universe ... so dark and terrible movies!

* Contrapositive
** Define
The contrapositive of a conditional statment =p -> q= is =~q -> ~p=
** Example
If it is snowing, it is cold.
If it is not cold, it is not snowing.
** Test question 
Which of the folowing follows from =~p -> q=?

a. =p -> ~q=
b. =q -> ~p=
c. =~(p -> ~q)=
d. =~q -> p=

* Converse
** Define
The converse of a conditional statment =p -> q= is =q -> p=
** Example
If it is snowing, it is cold.
If it is cold, it is snowing.

* inverse
** Define
The inverse of a conditional statment =p -> q= is =~p -> ~q=
** Example
If it is snowing, it is cold.
If it is not snowing, it is not cold.

* R: real numbers
** Define
The set of numbers on the number line; can be expressed as an infinite decimals.
** Examples
1 = 1.0000... is a member of R
pi= 3.1415926... is also in R

* Z: integers
** Define
The set of all whole numbers, positive and negitive.

* Q: rational numbers
** Define
The set of all fractions. For any a, b in R, where b is not 0, a/b is in Q.  

* predicate
** Define
A boolean-valued function: that is a mapping from some domain to ={true false}=.
** Example
let P(n) be /n is prime/

* Domain
** Define
The set of all valid inputs

* CoDomain
** Define
The set of all valid outputs. Not all are necessarily reachable.

* quantifier

* antecedent
** Define
The p in p -> q

* consequent
** Define
The q in p -> q

* Set

* Fallacy
** Define
An error in logic

* biconditional
** Define 
if and only if

* sufficient condition
** Define
A sufficient condition is true only if the result is true.
iff p -> q, p is a sufficient condition for q.

* necessary condition
** Define
A sufficient condition must be met for a result to hold.
iff p -> q, q is a necessary condition for p.

* ~p
** define
not

* p ^ q
** define
and

* p V q
** define
or

* p XOR q
** define
p and  q have difering truth values; one is true but not boath.

* p == q
** define
Logicaly eqivelaent

* p -> q
** define
conditional: if p then q

* p <--> q
** define
biconditional

* Three dots in a triangle

* upside down A
** Define
The universal qualifier. Used to state properties of every member of a set.

* Backwards E
** Define
The existental qualifier. Used to state properties of at least one member of a set.

* union
** Define
The set of all elements in at least one of the sets set.

*intersection
** Define
The set of all elements in boath sets.

* Commutative laws
** Define
Order of opperands matters not. As in:
A or B == B or A

* associative laws
** Define
Perens matter not:
A and (B and C) == (A and B) and C

* distributive laws
** Define
A or (B and C) == (A or B) and (A or C)
A and (B or C) == (A and B) or (A and C)

* identity laws
** Define
A == A

negation laws


* double negative law
** Define
A == ~(~A)

* idempotent laws

* universal bound laws

* De morgan's laws

* absorption laws

* negations of t and c

* vacuously true
** Define
A conditional statment is said to be vacuously true if the anticedent is false.

* Modus Ponens

* Modus Tollens

* Elimination: valid argument form

* Transitivity: Valid Argument form
p -> q
q -> r
thus p -> r
